{
  "metadata": {
    "name": "bls-blueprint",
    "description": "A BLS Blueprint that can run keygen and signing jobs on demand from the Tangle network",
    "author": "",
    "category": null,
    "code_repository": "",
    "logo": null,
    "website": "",
    "license": ""
  },
  "manager": {
    "Evm": "contracts/out/BlsBlueprint.sol/BlsBlueprint.json"
  },
  "jobs": [
    {
      "metadata": {
        "name": "keygen",
        "description": "Runs a distributed key generation (DKG) process using the BLS protocol\n\n# Arguments\n* `n` - Number of parties participating in the DKG\n* `context` - The DFNS context containing network and storage configuration\n\n# Returns\nReturns the generated public key as a byte vector on success\n\n# Errors\nReturns an error if:\n- Failed to retrieve blueprint ID or call ID\n- Failed to get party information\n- MPC protocol execution failed\n- Serialization of results failed"
      },
      "params": [
        "Uint16"
      ],
      "result": [
        "Bytes"
      ]
    },
    {
      "metadata": {
        "name": "sign",
        "description": "Signs a message using the BLS protocol with a previously generated key\n\n# Arguments\n* `message` - The message to sign as a byte vector\n* `context` - The DFNS context containing network and storage configuration\n\n# Returns\nReturns the signature as a byte vector on success\n\n# Errors\nReturns an error if:\n- Failed to retrieve blueprint ID or call ID\n- Failed to retrieve the key entry\n- Signing process failed"
      },
      "params": [
        "Uint16",
        "Uint64",
        "Bytes"
      ],
      "result": [
        "Bytes"
      ]
    }
  ],
  "registration_params": [],
  "request_params": [],
  "gadget": {
    "Native": {
      "sources": [
        {
          "fetcher": {
            "Testing": {
              "cargo_package": "bls-blueprint",
              "cargo_bin": "main",
              "base_path": "/Users/nologik/commonwealth/bls-blueprint"
            }
          }
        }
      ]
    }
  }
}